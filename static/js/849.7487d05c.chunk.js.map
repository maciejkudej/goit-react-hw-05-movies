{"version":3,"file":"static/js/849.7487d05c.chunk.js","mappings":"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","sources":["components/moviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/form/form.module.css?7370","components/form/form.jsx","webpack://react-homework-template/./src/pages/movies/movies.module.css?0ac1","pages/movies/Movies.jsx","services/api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ original_title, id }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {original_title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"form_input__bh4-N\"};","import { useSearchParams } from 'react-router-dom';\nimport css from './form.module.css';\n\nexport const Form = () => {\n  const [, setSearchParams] = useSearchParams();\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setSearchParams({ q: e.target.elements.query.value });\n  };\n  return (\n    <form className={css.input} onSubmit={handleSubmit}>\n      <label>\n        <input type={'text'} name=\"query\" />\n        <button type=\"submit\">SEARCH</button>\n      </label>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"movies_title__lRp4I\"};","import { getMovieByQuery } from 'services/api';\nimport { MoviesList } from 'components/moviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { Radio } from 'react-loader-spinner';\nimport { useSearchParams } from 'react-router-dom';\nimport { Form } from 'components/form/form';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport css from './movies.module.css';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [searchParams] = useSearchParams();\n\n  const searchQuery = searchParams.get('q');\n\n  useEffect(() => {\n    if (!searchQuery) return;\n\n    const fetchMovie = async () => {\n      setError('');\n      setIsLoading(true);\n      try {\n        const data = await getMovieByQuery(searchQuery);\n\n        setMovies(data.results);\n      } catch (error) {\n        setError('There is something wrong in your action');\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovie();\n  }, [searchQuery]);\n\n  useEffect(() => {\n    if (!error) return;\n    toast.error(error);\n  }, [error]);\n\n  return (\n    <section>\n      <div>\n        <h1 className={css.title}>SEARCH MOVIE</h1>\n        <Form />\n        {movies.length > 0 && <MoviesList movies={movies} />}\n      </div>\n      {isLoading && (\n        <Radio\n          ariaLabel=\"loading-indicator\"\n          height={100}\n          width={100}\n          strokeWidth={5}\n          strokeWidthSecondary={1}\n          color=\"blue\"\n          secondaryColor=\"white\"\n        />\n      )}\n    </section>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '259df17d3f26a67b233d16c7dad06e96';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = { api_key: API_KEY };\n\nexport async function getTranding() {\n  const { data } = await axios.get('/trending/movie/week');\n  return data;\n}\nexport async function getMovieByQuery(query, page = 1) {\n  const params = { query, language: 'en-US', page };\n  const { data } = await axios.get('/search/movie', { params });\n  return data;\n}\nexport async function getMoviesById(id) {\n  const { data } = await axios.get(`/movie/${id}`);\n  return data;\n}\nexport async function getCast(id) {\n  const { data } = await axios.get(`/movie/${id}/credits`);\n  return data.cast;\n}\nexport async function getReviews(id) {\n  const { data } = await axios.get(`/movie/${id}/reviews`);\n  return data.results;\n}\n"],"names":["MoviesList","movies","location","useLocation","map","original_title","id","to","state","from","Form","useSearchParams","setSearchParams","className","css","onSubmit","e","preventDefault","q","target","elements","query","value","type","name","useState","setMovies","isLoading","setIsLoading","error","setError","searchQuery","get","useEffect","fetchMovie","getMovieByQuery","data","results","console","log","toast","length","ariaLabel","height","width","strokeWidth","strokeWidthSecondary","color","secondaryColor","getTranding","axios","page","params","language","getMoviesById","getCast","cast","getReviews","api_key"],"sourceRoot":""}