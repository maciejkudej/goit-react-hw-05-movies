{"version":3,"file":"static/js/183.3b283ae2.chunk.js","mappings":"sPACA,EAA0B,sB,kBCyD1B,EApDa,WACX,IAAQA,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAyBJ,EAAAA,EAAAA,WAAS,GAAzBK,GAAT,eAuBA,IArBAC,EAAAA,EAAAA,YAAU,WACR,GAAKR,EAAL,CACA,IAAMS,EAAU,mCAAG,2FACjBL,EAAS,IADQ,mBAGIM,EAAAA,EAAAA,IAAQV,GAHZ,OAGTW,EAHS,OAKfL,EAAaK,GALE,gDAOfP,EAAS,2CAPM,yBASfG,GAAa,GATE,4EAAH,qDAYhBE,GAbqB,CActB,GAAE,CAACT,KACJQ,EAAAA,EAAAA,YAAU,WACHL,GACLS,EAAAA,GAAAA,MAAYT,EACb,GAAE,CAACA,IAECE,EAGL,OAAOA,EAAUQ,OAAS,GACxB,6BACE,0BACE,wBACGR,EAAUS,KAAI,SAAAC,GAAI,OACjB,2BACE,gBACEC,UAAWC,EACXC,IAAG,0CAAqCH,EAAKI,cAC7CC,IAAI,kBAEN,yCAAeL,EAAKM,kBACpB,8CAAoBN,EAAKO,eAPlBP,EAAKQ,GADG,WAezB,wBAAI,iDAEP,C,+LCnDM,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,EAAAA,IAAU,wBAD5B,uBACGd,EADH,EACGA,KADH,kBAEEA,GAFF,kEAIA,SAAee,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,gGAAsCC,EAAtC,+BAA6C,EAC5CC,EAAS,CAAEF,MAAAA,EAAOG,SAAU,QAASF,KAAAA,GADtC,SAEkBH,EAAAA,EAAAA,IAAU,gBAAiB,CAAEI,OAAAA,IAF/C,uBAEGlB,EAFH,EAEGA,KAFH,kBAGEA,GAHF,mEAKA,SAAeoB,EAAtB,+CAAO,OAAP,oBAAO,WAA6BR,GAA7B,yFACkBE,EAAAA,EAAAA,IAAA,iBAAoBF,IADtC,uBACGZ,EADH,EACGA,KADH,kBAEEA,GAFF,kEAIA,SAAeD,EAAtB,+CAAO,OAAP,oBAAO,WAAuBa,GAAvB,yFACkBE,EAAAA,EAAAA,IAAA,iBAAoBF,EAApB,aADlB,uBACGZ,EADH,EACGA,KADH,kBAEEA,EAAKI,MAFP,kEAIA,SAAeiB,EAAtB,+CAAO,OAAP,oBAAO,WAA0BT,GAA1B,yFACkBE,EAAAA,EAAAA,IAAA,iBAAoBF,EAApB,aADlB,uBACGZ,EADH,EACGA,KADH,kBAEEA,EAAKsB,SAFP,kEApBPR,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CAAES,QAFV,mC","sources":["webpack://react-homework-template/./src/components/cast/Cast.module.css?6cbd","components/cast/Cast.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"imgCast\":\"Cast_imgCast__kZJxL\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport css from './Cast.module.css';\nimport { getCast } from 'services/api';\n\nconst Cast = () => {\n  const { moviesId } = useParams();\n  const [error, setError] = useState('');\n  const [movieData, setMovieData] = useState([]);\n  const [, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (!moviesId) return;\n    const fetchMovie = async () => {\n      setError('');\n      try {\n        const data = await getCast(moviesId);\n\n        setMovieData(data);\n      } catch (error) {\n        setError('There is something wrong in your action');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovie();\n  }, [moviesId]);\n  useEffect(() => {\n    if (!error) return;\n    toast.error(error);\n  }, [error]);\n\n  if (!movieData) {\n    return;\n  }\n  return movieData.length > 0 ? (\n    <header>\n      <div>\n        <ul>\n          {movieData.map(cast => (\n            <li key={cast.id}>\n              <img\n                className={css.imgCast}\n                src={`https://image.tmdb.org/t/p/w200/${cast.profile_path}`}\n                alt=\"movie poster\"\n              />\n              <div>{`Name: ${cast.original_name}`}</div>\n              <div>{`Character: ${cast.character}`}</div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </header>\n  ) : (\n    <h4>There is not any information about it for now</h4>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '259df17d3f26a67b233d16c7dad06e96';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = { api_key: API_KEY };\n\nexport async function getTranding() {\n  const { data } = await axios.get('/trending/movie/week');\n  return data;\n}\nexport async function getMovieByQuery(query, page = 1) {\n  const params = { query, language: 'en-US', page };\n  const { data } = await axios.get('/search/movie', { params });\n  return data;\n}\nexport async function getMoviesById(id) {\n  const { data } = await axios.get(`/movie/${id}`);\n  return data;\n}\nexport async function getCast(id) {\n  const { data } = await axios.get(`/movie/${id}/credits`);\n  return data.cast;\n}\nexport async function getReviews(id) {\n  const { data } = await axios.get(`/movie/${id}/reviews`);\n  return data.results;\n}\n"],"names":["moviesId","useParams","useState","error","setError","movieData","setMovieData","setIsLoading","useEffect","fetchMovie","getCast","data","toast","length","map","cast","className","css","src","profile_path","alt","original_name","character","id","getTranding","axios","getMovieByQuery","query","page","params","language","getMoviesById","getReviews","results","api_key"],"sourceRoot":""}