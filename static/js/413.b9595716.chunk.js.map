{"version":3,"file":"static/js/413.b9595716.chunk.js","mappings":"oMAEaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,GAAnB,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMP,GAA1C,SACGG,KAFIC,EADC,KASjB,C,wJCdD,EAAwB,oB,SCiDxB,EA3Ca,WACX,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOT,EAAP,KAAeU,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,IAAnC,eAAOI,EAAP,KAAcC,EAAd,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,2FACjBF,EAAS,IADQ,mBAGIG,EAAAA,EAAAA,MAHJ,OAGTC,EAHS,OAIfR,EAAUQ,EAAKC,SAJA,gDAMfL,EAAS,2CANM,yBAQfF,GAAa,GARE,4EAAH,qDAWhBI,GACD,GAAE,KACHD,EAAAA,EAAAA,YAAU,WACHF,GACLO,EAAAA,GAAAA,MAAYP,EACb,GAAE,CAACA,KAGF,gCACE,eAAIQ,UAAWC,EAAf,SAA0B,mBACzBtB,EAAOuB,OAAS,IAAK,SAACxB,EAAA,EAAD,CAAYC,OAAQA,IACzCW,IACC,SAAC,KAAD,CACEa,UAAU,oBACVC,OAAQ,IACRC,MAAO,IACPC,YAAa,EACbC,qBAAsB,EACtBC,MAAM,OACNC,eAAe,YAKxB,C,+LC1CM,SAAeb,IAAtB,4CAAO,OAAP,oBAAO,sGACkBc,EAAAA,EAAAA,IAAU,wBAD5B,uBACGb,EADH,EACGA,KADH,kBAEEA,GAFF,kEAIA,SAAec,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,gGAAsCC,EAAtC,+BAA6C,EAC5CC,EAAS,CAAEF,MAAAA,EAAOG,SAAU,QAASF,KAAAA,GADtC,SAEkBH,EAAAA,EAAAA,IAAU,gBAAiB,CAAEI,OAAAA,IAF/C,uBAEGjB,EAFH,EAEGA,KAFH,kBAGEA,GAHF,mEAKA,SAAemB,EAAtB,+CAAO,OAAP,oBAAO,WAA6BhC,GAA7B,yFACkB0B,EAAAA,EAAAA,IAAA,iBAAoB1B,IADtC,uBACGa,EADH,EACGA,KADH,kBAEEA,GAFF,kEAIA,SAAeoB,EAAtB,+CAAO,OAAP,oBAAO,WAAuBjC,GAAvB,yFACkB0B,EAAAA,EAAAA,IAAA,iBAAoB1B,EAApB,aADlB,uBACGa,EADH,EACGA,KADH,kBAEEA,EAAKqB,MAFP,kEAIA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BnC,GAA1B,yFACkB0B,EAAAA,EAAAA,IAAA,iBAAoB1B,EAApB,aADlB,uBACGa,EADH,EACGA,KADH,kBAEEA,EAAKC,SAFP,kEApBPY,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CAAEU,QAFV,mC","sources":["components/moviesList/MoviesList.jsx","webpack://react-homework-template/./src/pages/home/home.module.css?cea6","pages/home/Home.jsx","services/api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ original_title, id }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {original_title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"home_title__cojxH\"};","import { useState, useEffect } from 'react';\nimport { getTranding } from 'services/api';\nimport { toast } from 'react-toastify';\nimport { Radio } from 'react-loader-spinner';\nimport { MoviesList } from 'components/moviesList/MoviesList';\nimport css from './home.module.css';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      setError('');\n      try {\n        const data = await getTranding();\n        setMovies(data.results);\n      } catch (error) {\n        setError('There is something wrong in your action');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovie();\n  }, []);\n  useEffect(() => {\n    if (!error) return;\n    toast.error(error);\n  }, [error]);\n\n  return (\n    <section>\n      <h1 className={css.title}>Tranding today</h1>\n      {movies.length > 0 && <MoviesList movies={movies} />}\n      {isLoading && (\n        <Radio\n          ariaLabel=\"loading-indicator\"\n          height={100}\n          width={100}\n          strokeWidth={5}\n          strokeWidthSecondary={1}\n          color=\"blue\"\n          secondaryColor=\"white\"\n        />\n      )}\n    </section>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '259df17d3f26a67b233d16c7dad06e96';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = { api_key: API_KEY };\n\nexport async function getTranding() {\n  const { data } = await axios.get('/trending/movie/week');\n  return data;\n}\nexport async function getMovieByQuery(query, page = 1) {\n  const params = { query, language: 'en-US', page };\n  const { data } = await axios.get('/search/movie', { params });\n  return data;\n}\nexport async function getMoviesById(id) {\n  const { data } = await axios.get(`/movie/${id}`);\n  return data;\n}\nexport async function getCast(id) {\n  const { data } = await axios.get(`/movie/${id}/credits`);\n  return data.cast;\n}\nexport async function getReviews(id) {\n  const { data } = await axios.get(`/movie/${id}/reviews`);\n  return data.results;\n}\n"],"names":["MoviesList","movies","location","useLocation","map","original_title","id","to","state","from","useState","setMovies","isLoading","setIsLoading","error","setError","useEffect","fetchMovie","getTranding","data","results","toast","className","css","length","ariaLabel","height","width","strokeWidth","strokeWidthSecondary","color","secondaryColor","axios","getMovieByQuery","query","page","params","language","getMoviesById","getCast","cast","getReviews","api_key"],"sourceRoot":""}